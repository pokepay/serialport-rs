## Build Matrix ##

# This configuration will setup a build for each channel & target combination (12 windows
# combinations in all).
#
# There are 3 channels: stable, beta, and nightly.
#
# Alternatively, the full version may be specified for the channel to build using that specific
# version (e.g. channel: 1.5.0)
#
# The values for target are the set of windows Rust build targets. Each value is of the form
#
# ARCH-pc-windows-TOOLCHAIN
#
# Where ARCH is the target architecture, either x86_64 or i686, and TOOLCHAIN is the linker
# toolchain to use, either msvc or gnu. See https://www.rust-lang.org/downloads.html#win-foot for
# a description of the toolchain differences.
# See https://github.com/rust-lang-nursery/rustup.rs/#toolchain-specification for description of
# toolchains and host triples.
environment:
  matrix:

### Mac OS

  # Stable 64-bit
    - APPVEYOR_BUILD_WORKER_IMAGE: macOS
      channel: stable
      target: x86_64-apple-darwin
  # 1.36.0 64-bit
    - APPVEYOR_BUILD_WORKER_IMAGE: macOS
      channel: 1.36.0
      target: x86_64-apple-darwin

### Windows

  # Stable 64-bit MSVC
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      channel: stable
      target: x86_64-pc-windows-msvc
      BITS: 64
  # Stable 32-bit MSVC
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      channel: stable
      target: i686-pc-windows-msvc
      BITS: 32

## Install Script ##
for:
# For Mac OS
-
  matrix:
    only:
      - image: macOS
  install:
  - ps: $IsOsX
  - ps: $IsLinux
  - ps: $IsWindows
  - curl --proxy '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --default-toolchain %channel% --default-host %target% -y
  - rustc -vV
  - cargo -vV
  - if [[ -z $DISABLE_TESTS ]]; then cargo test --verbose; fi

# For Windows
-
  matrix:
    only:
      - image: Visual Studio 2015
  install:
  - ps: $IsOsX
  - ps: $IsLinux
  - ps: $IsWindows
  - IF "%BITS%" == "32" SET ARCH=i686
  - IF "%BITS%" == "64" SET ARCH=x86_64
  - appveyor-retry appveyor DownloadFile https://win.rustup.rs/ -FileName rustup-init.exe
  - rustup-init -yv --default-toolchain %channel% --default-host %target%
  - set PATH=C:\msys64\mingw%BITS%\bin;C:\msys64\usr\bin;%USERPROFILE%\.cargo\bin;%PATH%
  - rustc -vV
  - cargo -vV

## Build Script ##

# 'cargo test' takes care of building for us, so disable Appveyor's build stage. This prevents
# the "directory does not contain a project or solution file" error.
build: false

# Uses 'cargo test' to run tests and build. Alternatively, the project may call compiled programs
#directly or perform other testing commands. Rust will automatically be placed in the PATH
# environment variable.
test_script:
  - cargo test --verbose
    #  - if [[ -z $DISABLE_TESTS ]]; then cargo test --verbose; fi

